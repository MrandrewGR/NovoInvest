name: Автогенерация Alembic миграций

on:
  push:
    branches: [ "main" ]

jobs:
  autogen:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout кода
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Получение полной истории коммитов

      - name: Настройка Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Установка зависимостей
        run: |
          cd services/db
          pip install --no-cache-dir -r requirements.txt

      - name: Создание контейнера PostgreSQL
        run: |
          docker run -d --name local-postgres \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=postgres \
            -p 5432:5432 \
            postgres:15-alpine
          # Ждем несколько секунд, пока Postgres запустится
          sleep 10

      - name: Генерация миграций Alembic
        run: |
          cd services/db
          export DB_HOST=127.0.0.1
          export DB_PORT=5432
          export DB_USER=postgres
          export DB_PASSWORD=postgres
          export DB_NAME=my_local_autogen_db

          # Создание базы данных, если она не существует
          python <<EOF
          import os
          from sqlalchemy import create_engine, text

          system_url = f"postgresql+psycopg2://{os.environ['DB_USER']}:{os.environ['DB_PASSWORD']}@{os.environ['DB_HOST']}:{os.environ['DB_PORT']}/postgres"
          eng = create_engine(system_url, isolation_level="AUTOCOMMIT")
          with eng.connect() as conn:
              res = conn.execute(text("SELECT 1 FROM pg_database WHERE datname='my_local_autogen_db'"))
              if not res.fetchone():
                  conn.execute(text("CREATE DATABASE my_local_autogen_db"))
          EOF

          # Установка переменной окружения для Alembic
          export DATABASE_URL=postgresql+psycopg2://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME

          # Применение миграций и создание новой ревизии
          alembic upgrade head
          alembic revision --autogenerate -m "AutoMigration for commit $GITHUB_SHA"

      - name: Коммит и пуш миграций
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Добавление новых или измененных миграций
          git add services/db/migrations/versions/

          # Проверка наличия изменений для коммита
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "AutoMigration for commit $GITHUB_SHA"
            git push origin main
          else
            echo "Нет новых изменений миграций. Пропуск коммита."
          fi

      - name: Остановка контейнера PostgreSQL
        run: docker stop local-postgres && docker rm local-postgres
