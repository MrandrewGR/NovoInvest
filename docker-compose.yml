version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"

  userbot:
    build: .
    depends_on:
      - kafka
    environment:
      TELEGRAM_API_ID: "${TELEGRAM_API_ID}"
      TELEGRAM_API_HASH: "${TELEGRAM_API_HASH}"
      TELEGRAM_CHANNEL_ID: "${TELEGRAM_CHANNEL_ID}"
      TELEGRAM_CHAT_ID: "${TELEGRAM_CHAT_ID}"
      KAFKA_BOOTSTRAP_SERVERS: "${KAFKA_BOOTSTRAP_SERVERS}"
      KAFKA_CHANNEL_TOPIC: "${KAFKA_CHANNEL_TOPIC}"
      KAFKA_CHAT_TOPIC: "${KAFKA_CHAT_TOPIC}"
      LOG_LEVEL: "${LOG_LEVEL}"
      LOG_FILE: "${LOG_FILE}"
      MEDIA_DIR: "${MEDIA_DIR}"
    volumes:
      - ./logs:/app/logs
      - ./media:/app/media
      - ./tg:/tg
      - ./session_name.session:/app/session_name.session
      - ./wait-for-kafka.sh:/tg/tgUserBot/wait-for-kafka.sh  # Монтирование скрипта ожидания
    working_dir: /tg/tgUserBot
    command: ["./wait-for-kafka.sh", "kafka", "9092", "python3", "main.py"]  # Использование скрипта ожидания
