version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: data_processor_db
    ports:
      - "5432:5432"

  data-processor:
    image: app-data-processor
    build:
      context: .
      dockerfile: Dockerfile-data-processor
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  tg_standard_bot:
    image: app-tg_standard_bot
    build:
      context: .
      dockerfile: Dockerfile-tg_standard_bot
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy

  tg_user_bot:
    image: app-tg_user_bot
    build:
      context: .
      dockerfile: Dockerfile-tg_user_bot
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
